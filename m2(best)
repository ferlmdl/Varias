<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Malla Curricular - Ingeniería Civil Informática UDP</title>
  <style>
    :root {
      --general: #a4d4f4;    /* Azul celeste claro - Formación General */
      --basicas: #f5e6a6;    /* Amarillo claro - Ciencias Básicas */
      --ciencias-ing: #f4c2f4; /* Rosado - Ciencias de la Ingeniería */
      --info: #d4b0f4;       /* Lila - Ingeniería Aplicada: Informática */
      --telecom: #b0f4b0;    /* Verde claro - Telecomunicaciones */
      --proyectos: #f4d4b0;  /* Durazno - Proyectos e Integración */
      --practicas: #e0e0e0;  /* Gris claro - Prácticas y Titulación */
    }
    
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f5f7fa;
      margin: 0;
      padding: 20px;
      color: #333;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      background: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }

    h1 {
      text-align: center;
      margin-bottom: 20px;
      color: #2c3e50;
      padding-bottom: 10px;
      border-bottom: 2px solid #3498db;
    }

    .progress-container {
      margin: 20px auto;
      width: 80%;
      background-color: #ecf0f1;
      border-radius: 10px;
      height: 25px;
      margin-bottom: 10px;
    }

    .progress-bar {
      height: 100%;
      border-radius: 10px;
      background-color: #2ecc71;
      width: 0%;
      transition: width 0.5s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: bold;
      font-size: 14px;
    }

    .stats {
      display: flex;
      justify-content: space-around;
      margin-bottom: 30px;
      background: #3498db;
      color: white;
      padding: 15px;
      border-radius: 8px;
      flex-wrap: wrap;
    }

    .stat-box {
      text-align: center;
      margin: 5px;
      min-width: 120px;
    }

    .stat-value {
      font-size: 24px;
      font-weight: bold;
    }

    .stat-label {
      font-size: 14px;
    }

    .malla-grid {
      display: grid;
      grid-template-columns: repeat(11, 1fr);
      gap: 10px;
      margin-bottom: 30px;
    }

    .semestre-col {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .semestre-title {
      background-color: #3498db;
      color: white;
      padding: 8px;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
    }

    .ramo {
      padding: 10px;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      height: 80px;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      font-size: 14px;
      position: relative;
    }

    .ramo:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .ramo.completed {
      text-decoration: line-through;
      opacity: 0.8;
    }

    .creditos {
      position: absolute;
      bottom: 3px;
      right: 5px;
      font-size: 10px;
      background: rgba(0,0,0,0.1);
      padding: 2px 5px;
      border-radius: 10px;
    }

    /* Categorías de colores */
    .general { background-color: var(--general); }
    .basicas { background-color: var(--basicas); }
    .ciencias-ing { background-color: var(--ciencias-ing); }
    .info { background-color: var(--info); }
    .telecom { background-color: var(--telecom); }
    .proyectos { background-color: var(--proyectos); }
    .practicas { background-color: var(--practicas); }

    .leyenda {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      justify-content: center;
      margin-top: 30px;
    }

    .leyenda-item {
      display: flex;
      align-items: center;
      padding: 5px 10px;
      border-radius: 5px;
      font-size: 14px;
    }

    .search-container {
      margin-bottom: 20px;
      display: flex;
      gap: 10px;
    }

    #search {
      flex-grow: 1;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 16px;
    }

    .filter-buttons {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    .filter-btn {
      padding: 8px 15px;
      background: #ecf0f1;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s;
    }

    .filter-btn.active {
      background: #3498db;
      color: white;
    }

    .reset-btn {
      background: #e74c3c;
      color: white;
    }

    @media (max-width: 1200px) {
      .malla-grid {
        grid-template-columns: repeat(6, 1fr);
      }
    }

    @media (max-width: 768px) {
      .malla-grid {
        grid-template-columns: repeat(3, 1fr);
      }
      
      .stats {
        flex-direction: column;
        gap: 15px;
      }
      
      .ramo {
        height: 60px;
        font-size: 12px;
      }
    }

    @media (max-width: 480px) {
      .malla-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Malla Curricular - Ingeniería Civil en Informática y Telecomunicaciones</h1>
    
    <div class="progress-container">
      <div id="progressBar" class="progress-bar">0% completado</div>
    </div>
    
    <div class="stats">
      <div class="stat-box">
        <div class="stat-label">Ramos totales</div>
        <div id="totalCourses" class="stat-value">0</div>
      </div>
      <div class="stat-box">
        <div class="stat-label">Aprobados</div>
        <div id="completedCourses" class="stat-value">0</div>
      </div>
      <div class="stat-box">
        <div class="stat-label">Porcentaje</div>
        <div id="percentage" class="stat-value">0%</div>
      </div>
      <div class="stat-box">
        <div class="stat-label">Créditos totales</div>
        <div id="totalCreditos" class="stat-value">0</div>
      </div>
      <div class="stat-box">
        <div class="stat-label">Créditos aprobados</div>
        <div id="completedCreditos" class="stat-value">0</div>
      </div>
    </div>
    
    <div class="search-container">
      <input type="text" id="search" placeholder="Buscar ramo...">
      <button id="clearSearch" class="filter-btn">Limpiar</button>
    </div>
    
    <div class="filter-buttons">
      <button id="filterAll" class="filter-btn active">Todos</button>
      <button id="filterCompleted" class="filter-btn">Aprobados</button>
      <button id="filterPending" class="filter-btn">Pendientes</button>
      <button id="resetAll" class="filter-btn reset-btn">Reiniciar todo</button>
    </div>
    
    <div class="malla-grid" id="mallaGrid"></div>
    
    <div class="leyenda">
      <div class="leyenda-item general">Formación General e Inglés</div>
      <div class="leyenda-item basicas">Ciencias Básicas</div>
      <div class="leyenda-item ciencias-ing">Ciencias de la Ingeniería</div>
      <div class="leyenda-item info">Ingeniería Aplicada: Informática</div>
      <div class="leyenda-item telecom">Ingeniería Aplicada: Telecomunicaciones</div>
      <div class="leyenda-item proyectos">Proyectos e Integración</div>
      <div class="leyenda-item practicas">Prácticas y Titulación</div>
    </div>
  </div>

  <script>
    const malla = [
      // Semestre 1
      [
        { nombre: "Comunicación para la Ingeniería", creditos: 4, categoria: "general" },
        { nombre: "Cálculo I", creditos: 6, categoria: "basicas" },
        { nombre: "Química", creditos: 4, categoria: "basicas" },
        { nombre: "Programación", creditos: 6, categoria: "info" },
        { nombre: "Álgebra y Geometría", creditos: 6, categoria: "basicas" }
      ],
      // Semestre 2
      [
        { nombre: "Inglés I", creditos: 4, categoria: "general" },
        { nombre: "Cálculo II", creditos: 6, categoria: "basicas" },
        { nombre: "Mecánica", creditos: 6, categoria: "basicas" },
        { nombre: "Programación Avanzada", creditos: 6, categoria: "info" },
        { nombre: "Álgebra Lineal", creditos: 6, categoria: "basicas" }
      ],
      // Semestre 3
      [
        { nombre: "Inglés II", creditos: 4, categoria: "general" },
        { nombre: "Ecuaciones Diferenciales", creditos: 6, categoria: "basicas" },
        { nombre: "Optimización", creditos: 6, categoria: "basicas" },
        { nombre: "Contabilidad y Costos", creditos: 4, categoria: "ciencias-ing" },
        { nombre: "Estructura de Datos y Algoritmos", creditos: 6, categoria: "info" }
      ],
      // Semestre 4
      [
        { nombre: "Inglés III", creditos: 4, categoria: "general" },
        { nombre: "Cálculo III", creditos: 6, categoria: "basicas" },
        { nombre: "Calor y Ondas", creditos: 6, categoria: "basicas" },
        { nombre: "Redes de Datos", creditos: 6, categoria: "telecom" },
        { nombre: "Electrónica y Electrotecnia", creditos: 6, categoria: "telecom" },
        { nombre: "Bases de Datos", creditos: 6, categoria: "info" }
      ],
      // Semestre 5
      [
        { nombre: "Curso de Formación General", creditos: 4, categoria: "general" },
        { nombre: "Electricidad y Magnetismo", creditos: 6, categoria: "telecom" },
        { nombre: "Desarrollo Web y Móvil", creditos: 6, categoria: "info" },
        { nombre: "Taller de Redes y Servicios", creditos: 6, categoria: "telecom" },
        { nombre: "Proyecto en TICs I", creditos: 6, categoria: "proyectos" }
      ],
      // Semestre 6
      [
        { nombre: "Curso de Formación General", creditos: 4, categoria: "general" },
        { nombre: "Bases de Datos Avanzadas", creditos: 6, categoria: "info" },
        { nombre: "Gestión Organizacional", creditos: 4, categoria: "ciencias-ing" },
        { nombre: "Arquitectura y Organización de Computadores", creditos: 6, categoria: "info" },
        { nombre: "Señales y Sistemas", creditos: 6, categoria: "telecom" }
      ],
      // Semestre 7
      [
        { nombre: "Curso de Formación General", creditos: 4, categoria: "general" },
        { nombre: "Sistemas Operativos", creditos: 6, categoria: "info" },
        { nombre: "Ingeniería de Software", creditos: 6, categoria: "info" },
        { nombre: "Inteligencia Artificial", creditos: 6, categoria: "info" },
        { nombre: "Evaluación de Proyectos TIC", creditos: 6, categoria: "proyectos" }
      ],
      // Semestre 8
      [
        { nombre: "Curso de Formación General", creditos: 4, categoria: "general" },
        { nombre: "Data Science", creditos: 6, categoria: "info" },
        { nombre: "Proyecto en TICs II", creditos: 6, categoria: "proyectos" },
        { nombre: "Introducción a la Economía", creditos: 4, categoria: "ciencias-ing" },
        { nombre: "Electivo Profesional", creditos: 6, categoria: "info" }
      ],
      // Semestre 9
      [
        { nombre: "Electivo Profesional", creditos: 6, categoria: "info" },
        { nombre: "Tecnologías Inalámbricas", creditos: 6, categoria: "telecom" },
        { nombre: "Criptografía y Seguridad en Redes", creditos: 6, categoria: "telecom" },
        { nombre: "Arquitecturas Emergentes", creditos: 6, categoria: "info" }
      ],
      // Semestre 10
      [
        { nombre: "Electivo Profesional", creditos: 6, categoria: "info" },
        { nombre: "Electivo Profesional", creditos: 6, categoria: "info" },
        { nombre: "Electivo Profesional", creditos: 6, categoria: "info" },
        { nombre: "Arquitectura de Software", creditos: 6, categoria: "info" }
      ],
      // Semestre 11
      [
        { nombre: "Práctica Profesional II", creditos: 4, categoria: "practicas" },
        { nombre: "Actividad de Titulación", creditos: 10, categoria: "practicas" }
      ]
    ];

    const mallaGrid = document.getElementById("mallaGrid");
    const progressBar = document.getElementById("progressBar");
    const totalCoursesEl = document.getElementById("totalCourses");
    const completedCoursesEl = document.getElementById("completedCourses");
    const percentageEl = document.getElementById("percentage");
    const totalCreditosEl = document.getElementById("totalCreditos");
    const completedCreditosEl = document.getElementById("completedCreditos");
    const searchInput = document.getElementById("search");
    const clearSearchBtn = document.getElementById("clearSearch");
    const filterAllBtn = document.getElementById("filterAll");
    const filterCompletedBtn = document.getElementById("filterCompleted");
    const filterPendingBtn = document.getElementById("filterPending");
    const resetAllBtn = document.getElementById("resetAll");

    let totalCourses = 0;
    let completedCourses = 0;
    let totalCreditos = 0;
    let completedCreditos = 0;
    let currentFilter = "all";
    let currentSearch = "";

    function renderMalla() {
      mallaGrid.innerHTML = "";
      totalCourses = 0;
      completedCourses = 0;
      totalCreditos = 0;
      completedCreditos = 0;
      
      malla.forEach((semestre, semestreIndex) => {
        const semestreCol = document.createElement("div");
        semestreCol.classList.add("semestre-col");
        
        const semestreTitle = document.createElement("div");
        semestreTitle.classList.add("semestre-title");
        semestreTitle.textContent = `Semestre ${semestreIndex + 1}`;
        semestreCol.appendChild(semestreTitle);
        
        semestre.forEach(ramo => {
          totalCourses++;
          totalCreditos += ramo.creditos;
          
          if (currentSearch && !ramo.nombre.toLowerCase().includes(currentSearch.toLowerCase())) {
            return;
          }
          
          const isCompleted = localStorage.getItem(ramo.nombre) === "1";
          if (currentFilter === "completed" && !isCompleted) return;
          if (currentFilter === "pending" && isCompleted) return;
          
          if (isCompleted) {
            completedCourses++;
            completedCreditos += ramo.creditos;
          }

          const ramoElement = document.createElement("div");
          ramoElement.classList.add("ramo", ramo.categoria);
          if (isCompleted) ramoElement.classList.add("completed");
          
          ramoElement.textContent = ramo.nombre;
          
          const creditosSpan = document.createElement("span");
          creditosSpan.classList.add("creditos");
          creditosSpan.textContent = `${ramo.creditos}c`;
          ramoElement.appendChild(creditosSpan);
          
          ramoElement.addEventListener("click", () => {
            ramoElement.classList.toggle("completed");
            const wasCompleted = localStorage.getItem(ramo.nombre) === "1";
            localStorage.setItem(ramo.nombre, ramoElement.classList.contains("completed") ? "1" : "0");
            
            if (ramoElement.classList.contains("completed") && !wasCompleted) {
              completedCreditos += ramo.creditos;
            } else if (!ramoElement.classList.contains("completed") && wasCompleted) {
              completedCreditos -= ramo.creditos;
            }
            
            updateStats();
          });

          semestreCol.appendChild(ramoElement);
        });
        
        mallaGrid.appendChild(semestreCol);
      });
      
      updateStats();
    }

    function updateStats() {
      const percentage = Math.round((completedCourses / totalCourses) * 100);
      const creditosPercentage = Math.round((completedCreditos / totalCreditos) * 100);
      
      progressBar.style.width = `${percentage}%`;
      progressBar.textContent = `${percentage}% completado (${completedCreditos}/${totalCreditos} créditos)`;
      
      totalCoursesEl.textContent = totalCourses;
      completedCoursesEl.textContent = completedCourses;
      percentageEl.textContent = `${percentage}%`;
      totalCreditosEl.textContent = totalCreditos;
      completedCreditosEl.textContent = completedCreditos;
    }

    searchInput.addEventListener("input", (e) => {
      currentSearch = e.target.value;
      renderMalla();
    });

    clearSearchBtn.addEventListener("click", () => {
      searchInput.value = "";
      currentSearch = "";
      renderMalla();
    });

    filterAllBtn.addEventListener("click", () => {
      currentFilter = "all";
      updateFilterButtons();
      renderMalla();
    });

    filterCompletedBtn.addEventListener("click", () => {
      currentFilter = "completed";
      updateFilterButtons();
      renderMalla();
    });

    filterPendingBtn.addEventListener("click", () => {
      currentFilter = "pending";
      updateFilterButtons();
      renderMalla();
    });

    resetAllBtn.addEventListener("click", () => {
      if (confirm("¿Estás seguro que quieres reiniciar todo el progreso?")) {
        malla.forEach(semestre => {
          semestre.forEach(ramo => {
            localStorage.removeItem(ramo.nombre);
          });
        });
        renderMalla();
      }
    });

    function updateFilterButtons() {
      filterAllBtn.classList.toggle("active", currentFilter === "all");
      filterCompletedBtn.classList.toggle("active", currentFilter === "completed");
      filterPendingBtn.classList.toggle("active", currentFilter === "pending");
    }

    renderMalla();
  </script>
</body>
</html>
